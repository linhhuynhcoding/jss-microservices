syntax = "proto3";

package auth;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/linhhuynhcoding/jss-microservices/rpc/gen/auth;authpb";

// -----------------------------------------------------------------------------
// ENUMS
// -----------------------------------------------------------------------------

enum VerificationCodeType {
  VERIFICATION_CODE_TYPE_UNSPECIFIED = 0;
  REGISTER = 1;
  FORGOT_PASSWORD = 2;
}

// -----------------------------------------------------------------------------
// MESSAGES
// -----------------------------------------------------------------------------

message RegisterRequest {
  string email            = 1 [(google.api.field_behavior) = REQUIRED];
  string password         = 2 [(google.api.field_behavior) = REQUIRED];
  string confirm_password = 3 [(google.api.field_behavior) = REQUIRED];
  string name             = 4 [(google.api.field_behavior) = REQUIRED];
  string phone_number     = 5 [(google.api.field_behavior) = REQUIRED];
  string code             = 6 [(google.api.field_behavior) = REQUIRED];
}

message User {
  int32  id           = 1;
  string email        = 2;
  string name         = 3;
  string phone_number = 4;
  string avatar       = 5;
}

message RegisterResponse {
  User user = 1;
}

message SendOtpRequest {
  string email              = 1 [(google.api.field_behavior) = REQUIRED];
  VerificationCodeType type = 2 [(google.api.field_behavior) = REQUIRED];
}

message MessageResponse {
  string message = 1;
}

message LoginRequest {
  string email      = 1 [(google.api.field_behavior) = REQUIRED];
  string password   = 2 [(google.api.field_behavior) = REQUIRED];
  string user_agent = 3;
  string ip         = 4;
}

message TokenResponse {
  string access_token  = 1;
  string refresh_token = 2;
}

message RefreshTokenRequest {
  string refresh_token = 1 [(google.api.field_behavior) = REQUIRED];
  string user_agent    = 2;
  string ip            = 3;
}

message LogoutRequest {
  string refresh_token = 1 [(google.api.field_behavior) = REQUIRED];
}

message ForgotPasswordRequest {
  string email            = 1 [(google.api.field_behavior) = REQUIRED];
  string code             = 2 [(google.api.field_behavior) = REQUIRED];
  string new_password     = 3 [(google.api.field_behavior) = REQUIRED];
  string confirm_password = 4 [(google.api.field_behavior) = REQUIRED];
}

message GoogleAuthState {
  string user_agent = 1;
  string ip         = 2;
}

message AuthorizationUrlResponse {
  string url = 1;
}

message GoogleCallbackRequest {
  string code  = 1 [(google.api.field_behavior) = REQUIRED];
  string state = 2 [(google.api.field_behavior) = REQUIRED];
}

// -----------------------------------------------------------------------------
// SERVICE
// -----------------------------------------------------------------------------

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/auth/register"
      body: "*"
    };
  }

  rpc SendOtp(SendOtpRequest) returns (MessageResponse) {
    option (google.api.http) = {
      post: "/v1/auth/otp"
      body: "*"
    };
  }

  rpc Login(LoginRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }

  rpc RefreshToken(RefreshTokenRequest) returns (TokenResponse) {
    option (google.api.http) = {
      post: "/v1/auth/refresh-token"
      body: "*"
    };
  }

  rpc Logout(LogoutRequest) returns (MessageResponse) {
    option (google.api.http) = {
      post: "/v1/auth/logout"
      body: "*"
    };
  }

  rpc ForgotPassword(ForgotPasswordRequest) returns (MessageResponse) {
    option (google.api.http) = {
      post: "/v1/auth/forgot-password"
      body: "*"
    };
  }

  rpc GetAuthorizationUrl(GoogleAuthState) returns (AuthorizationUrlResponse) {
    option (google.api.http) = {
      get: "/v1/auth/google-link"
    };
  }

  rpc GoogleCallback(GoogleCallbackRequest) returns (TokenResponse) {
    option (google.api.http) = {
      get: "/v1/auth/google/callback"
    };
  }
}
