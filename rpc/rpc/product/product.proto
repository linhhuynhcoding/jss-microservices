syntax = "proto3";

package product;

import "google/api/annotations.proto";
import "product/common.proto"; 

option go_package = "github.com/linhhuynhcoding/jss-microservices/rpc/gen/product";

service ProductCustomer {
    rpc Dummy (DummyRequest) returns (DummyResponse) {
        option (google.api.http) = {
            post: "/v1/dummy"
            body: "*"
        };
    }

    // ----- PRODUCT -----
    rpc CreateProduct (CreateProductRequest) returns (ProductResponse) {
        option (google.api.http) = {
            post: "/v1/products"
            body: "*"
        };
    }

    rpc GetProduct (GetProductRequest) returns (ProductResponse) {
        option (google.api.http) = {
            get: "/v1/products/{id}"
        };
    }

    rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {
        option (google.api.http) = {
            get: "/v1/products"
        };
    }

    rpc UpdateProduct (UpdateProductRequest) returns (ProductResponse) {
        option (google.api.http) = {
            patch: "/v1/products/{id}"
            body: "*"
        };
    }

    rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse) {
        option (google.api.http) = {
            delete: "/v1/products/{id}"
        };
    }

    // ----- PRODUCT CATEGORIES -----
    rpc ListProductCategories (ListProductCategoriesRequest) returns (ListProductCategoriesResponse) {
        option (google.api.http) = {
            get: "/v1/product-categories"
        };
    }

    // ----- CUSTOMER -----
    rpc CreateCustomer (CreateCustomerRequest) returns (CustomerResponse) {
        option (google.api.http) = {
            post: "/v1/customers"
            body: "*"
        };
    }

    rpc GetCustomer (GetCustomerRequest) returns (CustomerResponse) {
        option (google.api.http) = {
            get: "/v1/customers/{phone}"
        };
    }

    rpc ListCustomers (ListCustomersRequest) returns (ListCustomersResponse) {
        option (google.api.http) = {
            get: "/v1/customers"
        };
    }

    rpc UpdateCustomer (UpdateCustomerRequest) returns (CustomerResponse) {
        option (google.api.http) = {
            patch: "/v1/customers/{id}"
            body: "*"
        };
    }

    rpc DeleteCustomer (DeleteCustomerRequest) returns (DeleteCustomerResponse) {
        option (google.api.http) = {
            delete: "/v1/customers/{id}"
        };
    }

    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse) {
        option (google.api.http) = {
        post: "/v1/upload"
        body: "*"
        };
    }

    rpc PurchaseProduct(PurchaseProductRequest) returns (PurchaseProductResponse) {
        option (google.api.http) = {
        post: "/v1/purchase"
        body: "*"
        };
    }
} 

message DummyRequest {
    int32 dummy = 1;
}

message DummyResponse {
    int32 dummy = 1;
}

message CreateProductRequest {
    string name = 1;
    string code = 2;
    int32 category_id = 3;
    double weight = 4;
    double labor_cost = 5;
    double stone_cost = 6;
    double markup_rate = 7;
    int32 warranty_period = 8;
    string image = 9;
    int32 gold_type = 10;

    int32 stock = 11;
}

message GetProductRequest {
    int32 id = 1;
}

message ListProductsRequest {
    int32 page = 1;
    int32 limit = 2;
}

message ListProductsResponse {
    repeated Product products = 1;
}

message UpdateProductRequest {
    int32 id = 1;
    string name = 2;
    string code = 3;
    int32 category_id = 4;
    double weight = 5;
    double gold_price_at_time = 6;
    double labor_cost = 7;
    double stone_cost = 8;
    double markup_rate = 9;
    double selling_price = 10;
    int32 warranty_period = 11;
    string image = 12;

    int32 stock = 13;
}

message DeleteProductRequest {
    int32 id = 1;
}

message DeleteProductResponse {
    bool success = 1;
}

message ProductResponse {
    Product product = 1;
}

message ListProductCategoriesRequest {}

message ListProductCategoriesResponse {
    repeated ProductCategory categories = 1;
}

message CreateCustomerRequest {
    string name = 1;
    string phone = 2;
    string email = 3;
    string address = 4;
}

message GetCustomerRequest {
    string phone = 1;
}

message ListCustomersRequest {
    int32 page = 1;
    int32 limit = 2;
}

message ListCustomersResponse {
    repeated Customer customers = 1;
}

message UpdateCustomerRequest {
    int32 id = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
    string address = 5;
}

message DeleteCustomerRequest {
    int32 id = 1;
}

message DeleteCustomerResponse {
    bool success = 1;
}

message CustomerResponse {
    Customer customer = 1;
}

message UploadFileRequest {
  bytes file_data = 1;
  string filename = 2;
  string content_type = 3;
  int64 file_size = 4;
}

message UploadFileResponse {
  string message = 1;
  string file_id = 2;
  string filename = 3;
  int64 file_size = 4;
  string file_url = 5;
}

message PurchaseProductRequest {
    int32 customer_id = 1;
    repeated PurchaseProductRequest_Product products = 2;
    int32 order_id = 3;
}

message PurchaseProductRequest_Product {
    int32 product_id = 1;
    int32 quantity = 2;
}

message PurchaseProductResponse {
    repeated Product products = 1;
    Customer customer = 2;
}

